#!/bin/bash

# ========== Color Setup ==========
green="\e[38;5;87m"
red="\e[38;5;196m"
neutral="\e[0m"
blue="\e[38;5;130m"
orange="\e[38;5;99m"
yellow="\e[38;5;226m"
bold_white="\e[1;37m"
reset="\e[0m"

# ========== Remove Previous Bot ==========
hapus_bot_lama() {
  echo -e "${orange}🔄 Menghapus bot lama...${neutral}"
  systemctl stop sellvpn.service 2>/dev/null
  systemctl disable sellvpn.service 2>/dev/null
  rm -f /etc/systemd/system/sellvpn.service
  rm -f /usr/bin/sellvpn /usr/bin/server_sellvpn /etc/cron.d/server_sellvpn
  rm -rf /root/BotVPN2

  if command -v pm2 &> /dev/null; then
    pm2 delete sellvpn &> /dev/null
    pm2 save &> /dev/null
  fi

  systemctl daemon-reload
  echo -e "${green}✅ Bot lama berhasil dihapus.${neutral}"
}

# ========== Install Dependencies ==========
pasang_package() {
  echo -e "${blue}🔧 Menginstal dependensi...${reset}"

  apt update -y
  apt install -y npm nodejs curl dos2unix jq tmux git \
    build-essential libcairo2-dev libpango1.0-dev libjpeg-dev \
    libgif-dev librsvg2-dev pkg-config libpixman-1-dev ufw sqlite3

  npm install -g pm2
}

# ========== Setup Bot ==========
setup_bot() {
  timedatectl set-timezone Asia/Jakarta

  if [ -d /root/BotVPN2/.git ]; then
    echo -e "${yellow}🔁 Update repo bot...${reset}"
    cd /root/BotVPN2 && git pull
  else
    echo -e "${green}📥 Clone repo bot...${reset}"
    git clone https://github.com/joytun21/BhotVpn.git /root/BotVPN2
  fi

  echo -e "${yellow}🔧 Konversi format file script ke Unix...${reset}"
  find /root/BotVPN2/scripts -type f -name "*.sh" -exec dos2unix {} \;

  echo -e "${yellow}📦 Menginstal paket NPM...${reset}"
  npm install --prefix /root/BotVPN2 sqlite3 express crypto telegraf axios dotenv
  npm install --prefix /root/BotVPN2 form-data
   
  chmod +x /root/BotVPN2/*
  mkdir -p /root/BotVPN2/backup
  mkdir -p /root/BotVPN2/restore
}

# ========== Konfigurasi Firewall ==========
set_firewall() {
  echo -e "${yellow}🛡️ Mengatur firewall...${reset}"
  ufw allow 22
  ufw allow 80
  ufw allow 443
  ufw allow 50123
  ufw --force enable
}

# ========== Konfigurasi Bot ==========
server_app() {
  clear
  echo -e "${orange}──────────────────────────────────────────────${neutral}"
  echo -e "   ${green}::: KONFIGURASI BOT VPN TELEGRAM :::${neutral}"
  echo -e "${orange}──────────────────────────────────────────────${neutral}"

  read -rp "Masukkan Token Bot         : " token
  read -rp "Masukkan Admin ID          : " adminid
  read -rp "Masukkan ID Grup Telegram  : " groupid
  read -rp "Masukkan Kunci Enkripsi (32 karakter) : " encryptkey
  read -rp "Masukkan Nama Store        : " namastore
  read -rp "Masukkan DATA QRIS         : " dataqris
  read -rp "Masukkan MERCHANT ID       : " merchantid
  read -rp "Masukkan API KEY           : " apikey
  
  cat <<EOF > /root/BotVPN2/.vars.json
{
  "BOT_TOKEN": "$token",
  "USER_ID": "$adminid",
  "GROUP_ID": "$groupid",
  "ENCRYPT_KEY": "$encryptkey"
  "NAMA_STORE": "$namastore",
  "PORT": "50123",
  "DATA_QRIS": "$dataqris",
  "MERCHANT_ID": "$merchantid",
  "API_KEY": "$apikey"
}
EOF

  # Validasi file JSON
  if ! jq empty /root/BotVPN2/.vars.json 2>/dev/null; then
    echo -e "${red}❌ Gagal membuat file .vars.json. Cek input atau format.${neutral}"
    exit 1
  fi

  # Jadwal backup DB otomatis tiap 1 jam
  mkdir -p /root/BotVPN2/backup
  mkdir -p /root/BotVPN2/restore
  cat >/etc/cron.d/server_sellvpn <<EOF
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
0 * * * * root /bin/sh -c '
  now=\$(date +\\%Y-\\%m-\\%d_\\%H-\\%M)
  cp /root/BotVPN2/sellvpn.db /root/BotVPN2/backup/sellvpn_\$now.db
  curl -s -F chat_id="$adminid" -F document=@"/root/BotVPN2/backup/sellvpn_\$now.db" "https://api.telegram.org/bot$token/sendDocument" >/dev/null 2>&1
  find /root/BotVPN2/backup/ -type f -name "*.db" -mtime +3 -delete
'
EOF

  # Backup database ke .sql tiap jam
  cat >/etc/cron.d/sqlbackup_sellvpn <<EOF
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

15 * * * * root sqlite3 /root/BotVPN2/sellvpn.db .dump > /root/BotVPN2/restore/backup.sql && curl -s -F chat_id="$adminid" -F document=@"/root/BotVPN2/restore/backup.sql" "https://api.telegram.org/bot$token/sendDocument" >/dev/null 2>&1
EOF

# Backup terenkripsi .sql.enc
cat >/etc/cron.d/encrypted_sqlbackup_sellvpn <<EOF
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

30 * * * * root node /root/BotVPN2/scripts/encrypt_backup.js
EOF

  sleep 2
  pm2 start app.js --name sellvpn --cwd /root/BotVPN2 --log /var/log/sellvpn.log
  pm2 save
  pm2 startup

  # Kirim pesan konfirmasi ke Telegram
  curl -s -X POST https://api.telegram.org/bot$token/sendMessage \
    -d chat_id="$adminid" \
    -d text="✅ *Bot VPN berhasil diaktifkan!*\nGunakan /start untuk mulai." \
    -d parse_mode="Markdown"

  echo -e "${green}✅ Bot VPN telah aktif. Silakan cek Telegram Anda.${neutral}"
}

# ========== EXECUTOR ==========
if [[ ${1} == "sellvpn" ]]; then
  hapus_bot_lama
  pasang_package
  setup_bot
  set_firewall
  server_app
else
  echo -e "${red}❌ Gunakan perintah: ${yellow}start sellvpn${neutral}"
  exit 1
fi